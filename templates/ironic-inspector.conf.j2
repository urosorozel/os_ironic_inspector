# {{ ansible_managed }}

[DEFAULT]
rootwrap_config = /etc/ironic-inspector/rootwrap.conf
auth_strategy = {{ ironic_inspector_openstack_auth_strategy }} 
debug = {{ debug }}

[capabilities]
boot_mode = {{ ironic_inspector_boot_mode_record | bool | default('false') }}

[cors]

[database]
connection = {{ ironic_inspector_openstack_db_connection_string }}
max_overflow = {{ ironic_inspector_db_max_overflow }}
max_pool_size = {{ ironic_inspector_db_max_pool_size }}
pool_timeout = {{ ironic_inspector_db_pool_timeout }}

[discovery]
{% if ironic_inspector_enable_discovery == true %}
enroll_node_driver = {{ ironic_inspector_default_node_driver }}
{% endif %}

[dnsmasq_pxe_filter]
{% if ironic_inspector_pxe_filter == "dnsmasq" %}
dhcp_hostsdir = /etc/dnsmasq.d/dhcp-hostsdir
dnsmasq_start_command = systemctl start dnsmasq
dnsmasq_stop_command  = systemctl stop dnsmasq
{% endif %}

[iptables]
{% if ironic_inspector_pxe_filter == "iptables" %}
manage_firewall = {{ ironic_inspector_manage_firewall | bool | default('false') }}
{% endif %}
dnsmasq_interface =  {{ironic_inspector_dhcp_interface }}

[ironic]
username = {{ ironic_inspector_service_user_name }}
password = {{ ironic_inspector_service_password }}
project_name = {{ ironic_inspector_service_project_name }}
user_domain_name = {{ ironic_inspector_service_domain_name | default("Default") }}
project_domain_name = {{ ironic_inspector_service_domain_name | default("Default") }}
auth_url = {{ keystone_service_adminurl }}
insecure = {{ keystone_service_adminuri_insecure | bool }}
auth_type = {{ ironic_inspector_keystone_auth_plugin }}
valid_interfaces = {{ ironic_inspector_valid_interfaces }}
insecure = {{ keystone_service_internaluri_insecure | bool }}

[keystone_authtoken]
insecure = {{ keystone_service_internaluri_insecure | bool }}
auth_type = {{ ironic_inspector_keystone_auth_plugin }}
auth_url = {{ keystone_service_adminuri }}
auth_uri = {{ keystone_service_internaluri }}
project_domain_id = {{ ironic_inspector_service_project_domain_id }}
user_domain_id = {{ ironic_inspector_service_user_domain_id }}
project_name = {{ ironic_inspector_service_project_name }}
username = {{ ironic_inspector_service_user_name }}
password = {{ ironic_inspector_service_password }}
region_name = {{ keystone_service_region }}
memcached_servers = {{ memcached_servers }}
# if your memcached server is shared, use these settings to avoid cache poisoning
memcache_security_strategy = ENCRYPT
memcache_secret_key = {{ memcached_encryption_key }}

[oslo_policy]

[pci_devices]

[processing]
add_ports = {{ ironic_inspector_port_addition | default('pxe') }}
keep_ports = {{ ironic_inspector_keep_ports | default('present') }}
store_data = {{ ironic_inspector_swift_store_data }} 
store_data_location = {{ ironic_inspector_report_path }}
ramdisk_logs_dir = {{ ironic_inspector_data_dir }}/log
always_store_ramdisk_logs = {{ ironic_inspector_store_ramdisk_logs | default('true') | bool }}
{% if ironic_inspector_processing_hooks is defined %}
processing_hooks = {{ ironic_inspector_processing_hooks }}
{% endif %}
{% if ironic_inspector_enable_discovery == true %}
node_not_found_hook = enroll
{% endif %}

[pxe_filter]
{% if ironic_inspector_dhcp_type == "isc_dhcp" %}
driver = iptables
{% else %}
driver = {{ ironic_inspector_pxe_filter }}
{% endif %}

[swift]
username = {{ ironic_inspector_swift_username }}
password = {{ ironic_inspector_swift_password }}
project_name = {{ ironic_inspector_swift_project_name }}
user_domain_name = {{ ironic_inspector_service_domain_id | default("Default") }}
project_domain_name = {{ ironic_inspector_service_domain_id | default("Default") }}
auth_url = {{ keystone_service_adminurl }}
insecure = {{ keystone_service_adminuri_insecure | bool }}
auth_type = {{ ironic_inspector_keystone_auth_plugin }}
valid_interfaces = {{ ironic_inspector_valid_interfaces }}
container = {{ ironic_inspector_swift_container }} 
